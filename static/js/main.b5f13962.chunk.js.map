{"version":3,"sources":["views/Login/login.js","views/Components/Navbar.js","views/Components/NavbarAdmin.js","views/Components/NavbarStudent.js","Functions/Register.js","views/Login/Register/Register.js","views/Users/Student.js","Functions/AddElectives.js","views/Components/Modals.js","views/Users/Admin.js","views/Users/Unauthorized.js","views/Components/ProtectedRoutes.js","views/Components/ProtectedRouteStudent.js","views/Components/Home.js","views/Components/Logout.js","views/Components/ChangeElectives.js","views/Components/ListElectives.js","App.js","serviceWorker.js","index.js","assets/student.jpeg"],"names":["Login","props","state","user_name","password","errmsg","onSubmit","bind","onChange","e","this","setState","target","name","value","localStorage","setItem","history","push","setPerm","setName","axios","post","rollno","pass","then","res","console","log","data","setStuData","preventDefault","className","Container","Row","Col","md","CardGroup","Card","CardBody","Form","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","type","placeholder","autoComplete","xs","Button","color","disabled","length","style","width","Component","Navbars","toggle","toggleNavbar","isOpen","collapsed","Navbar","light","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","href","NavbarAdmin","clear","NavbarStudent","register","newUser","sendmessage","a","sec","sem","dept","catch","err","Register","msg","setmessage","msg1","user","match","toUpperCase","lg","xl","maxLength","pattern","min","max","block","container_style","margin","Student","CardImg","src","student_image","alt","CardHeader","tag","CardText","studata","section","semester","sm","size","order","offset","to","GetElectives","setElectiveList","department","UploadModal","buttonLabel","fileInput","React","createRef","useState","modal","setModal","file","setFile","setSemester","capacity","setCapacity","course_code","setCourse_code","course","setCourse","setDepartment","Alert","UploadElectivesSingle","Modal","ModalHeader","ModalBody","FormGroup","Label","for","id","FormText","onFileLoaded","inputRef","onError","inputElem","reason","configOptions","header","check","ModalFooter","allotment","Axios","alert","Admin","email","setEmail","mail","get","tomail","Unauthorized","ProtectedRoute","component","rest","render","pathname","from","location","ProtectedRouteStudent","Home","Logout","align","ChangeElectives","pref1","setpref1","pref2","setpref2","pref3","setpref3","electiveList","setmsg","useHistory","useEffect","renderTableData","num","setpref","map","tuple","index","course_name","Table","striped","bordered","hover","SendChangedElectives","elec1","elec2","elec3","UncontrolledPopover","trigger","placement","PopoverBody","goBack","ListElectives","SendSelectedElectives","App","perm","handleLogout","exact","path","getItem","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b5f13962.chunk.js","sourcesContent":["import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport axios from \"axios\"\nimport \"../Login/loginstyle.css\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardGroup,\n  Col,\n  Container,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Row\n} from \"reactstrap\"\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user_name: \"\",\n      password: \"\",\n      errmsg: null\n    }\n    this.onSubmit = this.onSubmit.bind(this)\n    this.onChange = this.onChange.bind(this)\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  UNSAFE_componentWillMount() {\n    // if (this.Auth.loggedIn()) this.props.history.replace(\"/\");\n  }\n\n  onSubmit(e) {\n    if (this.state.user_name === \"admin\" && this.state.password === \"admin\") {\n      localStorage.setItem(\"uid\", this.state.user_name)\n      localStorage.setItem(\"perm\", \"admin\")\n      this.props.history.push(\"/admin\")\n\n      this.props.setPerm(\"admin\")\n      this.props.setName(\"admin\")\n    } else {\n      axios\n        .post(\"/Login\", {\n          rollno: this.state.user_name,\n          pass: this.state.password\n        })\n        .then(res => {\n          console.log(res)\n\n          if (res.data === \"NO SUCH ROLL NUMBER EXISTS\")\n            this.setState({\n              errmsg: \"No Such Roll Number Exists\",\n              user_name: \"\",\n              password: \"\"\n            })\n          else if (res.data === \"WRONG PASSWORD\")\n            this.setState({ errmsg: \"Wrong Password Try Again\", password: \"\" })\n          else {\n            this.props.setStuData(res.data)\n\n            localStorage.setItem(\"uid\", res.data.name)\n            localStorage.setItem(\"perm\", \"student\")\n            this.props.setPerm(\"student\")\n            this.props.setName(this.state.user_name)\n            this.props.history.push(\"/student\")\n          }\n        })\n    }\n    e.preventDefault()\n  }\n\n  render() {\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"8\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <Form onSubmit={this.onSubmit}>\n                      <h1>Login</h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-user\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          name=\"user_name\"\n                          type=\"text\"\n                          placeholder=\"RollNo\"\n                          autoComplete=\"username\"\n                          value={this.state.user_name}\n                          onChange={this.onChange}\n                        />\n                      </InputGroup>\n                      <InputGroup className=\"mb-4\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-lock\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          name=\"password\"\n                          type=\"password\"\n                          placeholder=\"Password\"\n                          autoComplete=\"current-password\"\n                          value={this.state.password}\n                          onChange={this.onChange}\n                        />\n                      </InputGroup>\n                      <Row>\n                        <Col xs=\"6\">\n                          <Button\n                            color=\"primary\"\n                            className=\"px-4\"\n                            disabled={\n                              this.state.user_name.length === 0 ||\n                              this.state.password.length === 0\n                            }\n                          >\n                            Login\n                          </Button>\n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                          <Button color=\"link\" className=\"px-0\">\n                            Forgot password?\n                          </Button>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n                <Card className=\"signc\" style={{ width: \"44%\" }}>\n                  <CardBody className=\"text-center\">\n                    <div>\n                      <h2>\n                        {\" \"}\n                        {this.state.errmsg ? this.state.errmsg : \"Welcome\"}\n                      </h2>\n                    </div>\n                  </CardBody>\n                </Card>\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default Login\n","import React, { Component } from \"react\"\n\nimport {\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\n\nclass Navbars extends Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.toggleNavbar = this.toggleNavbar.bind(this)\n    this.state = {\n      isOpen: false,\n      collapsed: true\n    }\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    })\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Navbar color=\"#ffffff\" light expand=\"md\" className=\"Navbar\">\n          <NavbarBrand style={{ color: \"#fff\" }}>\n            Elective Management System\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/login\" style={{ color: \"#fff\" }}>\n                  login\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    )\n  }\n}\n\nexport default Navbars\n","import React, { Component } from \"react\"\n\nimport {\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\n\nclass NavbarAdmin extends Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.toggleNavbar = this.toggleNavbar.bind(this)\n    this.state = {\n      isOpen: false,\n      collapsed: true\n    }\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    })\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Navbar color=\"#ffffff\" light expand=\"md\" className=\"Navbar\">\n          <NavbarBrand style={{ color: \"#fff\" }}>\n            Elective Management System\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink\n                  style={{ color: \"#fff\" }}\n                  href=\"/logout\"\n                  onClick={localStorage.clear()}\n                >\n                  logout\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    )\n  }\n}\n\nexport default NavbarAdmin\n","import React, { Component } from \"react\"\n\nimport {\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem,\n  NavLink\n} from \"reactstrap\"\n\nclass NavbarStudent extends Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.toggleNavbar = this.toggleNavbar.bind(this)\n    this.state = {\n      isOpen: false,\n      collapsed: true\n    }\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    })\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Navbar color=\"#ffffff\" light expand=\"md\" className=\"Navbar\">\n          <NavbarBrand style={{ color: \"#fff\" }}>\n            Elective Management System\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink\n                  style={{ color: \"#fff\" }}\n                  href=\"/logout\"\n                  onClick={localStorage.clear()}\n                >\n                  logout\n                </NavLink>\n                <NavLink\n                  style={{ color: \"#fff\" }}\n                  href=\"\"\n                  onClick={localStorage.clear()}\n                >\n                  profile\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    )\n  }\n}\n\nexport default NavbarStudent\n","import axios from \"axios\"\n\nconst register = async (newUser, sendmessage) => {\n  // sendmessage(\"hello\")\n  return axios\n    .post(\"/Register\", {\n      name: newUser.name,\n      rollno: newUser.rollno,\n      pass: newUser.pass,\n      sec: newUser.sec,\n      sem: newUser.sem,\n      dept: newUser.dept\n    })\n    .then(res => {\n      if (res.data === true) {\n        console.log(\"Registered \" + newUser.name + \" \" + newUser.rollno)\n        sendmessage(\"Registered \" + newUser.name + \" \" + newUser.rollno)\n      } else if (res.data === \"USER ALREADY EXISTS\") {\n        console.log(\"Unable to register User already exists\")\n        sendmessage(\n          \"User \" + newUser.name + \" with \" + newUser.rollno + \" already exists\"\n        )\n      }\n    })\n    .catch(err => {\n      console.log(err)\n    })\n}\nexport default register\n","import React, { Component } from \"react\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Container,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Row\n} from \"reactstrap\"\n\nimport register from \"../../../Functions/Register\"\n\nclass Register extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: \"\",\n      rollno: \"\",\n      pass: \"\",\n      sec: \"\",\n      sem: \"\",\n      msg: \"\"\n    }\n    this.sendmessage = this.sendmessage.bind(this)\n    this.setmessage = this.setmessage.bind(this)\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n  onChange(e) {\n    // console.log(e.target.value);\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  sendmessage(msg1) {\n    console.log(msg1)\n    this.setState({ msg: msg1 })\n  }\n  setmessage() {\n    if (this.state.msg) return <InputGroupText>{this.state.msg}</InputGroupText>\n    else return\n  }\n  onSubmit(e) {\n    e.preventDefault()\n    const user = {\n      name: this.state.name,\n      rollno: this.state.rollno,\n      pass: this.state.pass,\n      sec: this.state.sec,\n      sem: this.state.sem\n    }\n    console.log(this.state.rollno.match(/\\D\\D\\D/g)[0].toUpperCase())\n    console.log(user)\n\n    register(user, this.sendmessage)\n\n    e.preventDefault()\n    // this.props.history.replace(\"/\");\n  }\n  render() {\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\n              <Card className=\"mx-4\">\n                <CardBody className=\"p-4\">\n                  <Form onSubmit={this.onSubmit}>\n                    <h1>Register</h1>\n                    <p className=\"text-muted\">Create student account</p>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        {/* <i className=\"icon-user\"></i> */}\n                        <InputGroupText>Name</InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        type=\"text\"\n                        placeholder=\"Student Name\"\n                        autoComplete=\"username\"\n                        name=\"name\"\n                        value={this.state.name}\n                        onChange={this.onChange}\n                      />\n                    </InputGroup>\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>Reg.No</InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        type=\"text\"\n                        placeholder=\"Registration Number\"\n                        autoComplete=\"Registration Number\"\n                        name=\"rollno\"\n                        value={this.state.rollno}\n                        onChange={this.onChange}\n                      />\n                    </InputGroup>\n\n                    <InputGroup className=\"mb-3\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>\n                          {/* <i className=\"icon-\"></i> */}\n                          Password\n                        </InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"new-password\"\n                        name=\"pass\"\n                        value={this.state.pass}\n                        onChange={this.onChange}\n                      />\n                    </InputGroup>\n\n                    <InputGroup className=\"mb-4\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>Section</InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        type=\"Text\"\n                        placeholder=\"Section\"\n                        autoComplete=\"section\"\n                        maxLength=\"1\"\n                        name=\"sec\"\n                        pattern=\"^[a-zA-Z]+$\"\n                        value={this.state.sec}\n                        onChange={this.onChange}\n                      />\n                    </InputGroup>\n\n                    <InputGroup className=\"mb-4\">\n                      <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>Semester</InputGroupText>\n                      </InputGroupAddon>\n                      <Input\n                        type=\"Number\"\n                        placeholder=\"Semester\"\n                        autoComplete=\"Semester\"\n                        maxLength=\"1\"\n                        min=\"1\"\n                        max=\"8\"\n                        name=\"sem\"\n                        value={this.state.sem}\n                        onChange={this.onChange}\n                      />\n                    </InputGroup>\n                    <Button\n                      color=\"success\"\n                      type=\"submit\"\n                      block\n                      disabled={\n                        this.state.name.length === 0 ||\n                        this.state.rollno.length === 0 ||\n                        this.state.pass.length === 0 ||\n                        this.state.sec.length === 0 ||\n                        this.state.sem.length === 0\n                      }\n                    >\n                      Create Account\n                    </Button>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n            {this.setmessage()}\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default Register\n","import React from \"react\"\nimport {\n  Card,\n  Button,\n  CardText,\n  Row,\n  Col,\n  CardHeader,\n  CardBody,\n  Container,\n  CardImg\n} from \"reactstrap\"\n\nimport { Link } from \"react-router-dom\"\n\nimport student_image from \"../../assets/student.jpeg\"\n\nconst container_style = {\n  margin: \"5%\"\n}\n\nconst Student = props => {\n  return (\n    <Container style={container_style}>\n      <Row className=\"justify-content-center\">\n        <Col md=\"4\">\n          <Card>\n            <CardImg src={student_image} alt=\"Card image cap\"></CardImg>\n          </Card>\n        </Col>\n        <Col md=\"6\" className=\"text-center\">\n          <Card>\n            <CardHeader tag=\"h4\">Details :</CardHeader>\n            <CardBody>\n              <CardText>Name :{props.studata.name}</CardText>\n              <CardText>Roll.No: {props.studata.rollno}</CardText>\n              <CardText>Section:{props.studata.section}</CardText>\n              <CardText>Semester:{props.studata.semester}</CardText>\n              <CardText>\n                Department:\n                {props.studata.rollno.match(/\\D\\D\\D/g)[0].toUpperCase()}\n              </CardText>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-center\">\n        <Col md=\"4\" sm={{ size: 6, order: 2, offset: 1 }}>\n          <Card>\n            <CardHeader className=\"text-center\" tag=\"h4\">\n              Selected Electives\n            </CardHeader>\n            <CardBody className=\"text-center\">\n              <CardText>electives list placeholder</CardText>\n\n              <Link to=\"change_electives\">\n                <Button>Change electives</Button>\n              </Link>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col md=\"4\" sm={{ size: 6, order: 2, offset: 1 }}>\n          <Card>\n            <CardHeader className=\"text-center\" tag=\"h4\">\n              Electives deadline\n            </CardHeader>\n\n            <CardBody className=\"text-center\">\n              <CardText>Date placeholder.</CardText>\n              <Link to=\"/list_electives\">\n                <Button>Select Electives</Button>\n              </Link>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Student\n","import axios from \"axios\"\nimport { Alert } from \"reactstrap\"\n\nexport const UploadElectives = data => {\n  return axios\n    .post(\"/addElectives\", {\n      data: data\n    })\n    .then(res => {\n      Alert(\"uploaded sucessfully\")\n      console.log(\"uploaded sucessfully\")\n    })\n}\nexport const SendSelectedElectives = (data, setmsg) => {\n  return axios.post(\"/chooseElectivePreference\", data).then(res => {\n    if (res.data === true) setmsg(\"Preference submitted Successfully\")\n    else if (res.data === false) {\n      setmsg(\"Failed to submit preferences\")\n    }\n  })\n}\n\nexport const SendChangedElectives = (data, setmsg) => {\n  return axios.post(\"/changeElectivePreference\", data).then(res => {\n    if (res.data === true) setmsg(\"Preference submitted Successfully\")\n    else if (res.data === false) {\n      setmsg(\"Failed to submit preferences\")\n    }\n  })\n}\n\nexport const UploadElectivesSingle = data => {\n  return axios.post(\"/addOneElective\", { ...data }).then(res => {\n    Alert(\"uploaded sucessfully\")\n    console.log(\"uploaded sucessfully\")\n  })\n}\n\nexport const GetElectives = (dept, sem, setElectiveList) => {\n  return axios\n    .post(\"/student/viewElectives\", {\n      department: dept,\n      sem: sem\n    })\n    .then(res => {\n      setElectiveList(res.data)\n      console.log(res)\n    })\n}\n\n// module.exports = { UploadElectives, UploadElectivesSingle }\n","import React, { useState } from \"react\"\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText\n} from \"reactstrap\"\nimport {\n  UploadElectives,\n  UploadElectivesSingle\n} from \"../../Functions/AddElectives\"\nimport { CSVReader } from \"react-papaparse\"\n\nconst UploadModal = props => {\n  const { buttonLabel, className } = props\n  let fileInput = React.createRef()\n  const [modal, setModal] = useState(false)\n  const [file, setFile] = useState(false)\n  const [sem, setSemester] = useState(null)\n  const [capacity, setCapacity] = useState(null)\n  const [course_code, setCourse_code] = useState(null)\n  const [course, setCourse] = useState(null)\n  const [department, setDepartment] = useState(null)\n\n  const toggle = () => setModal(!modal)\n\n  const handleReadCSV = data => {\n    console.log(\"--------------------------------------------------\")\n    console.log(data)\n    setFile(data)\n    console.log(\"--------------------------------------------------\")\n  }\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err)\n  }\n\n  const onChange = e => {\n    switch (e.target.name) {\n      case \"semester\":\n        setSemester(e.target.value)\n        break\n      case \"Capacity\":\n        setCapacity(e.target.value)\n\n        break\n      case \"option\":\n        setDepartment(e.target.value)\n        break\n      case \"course\":\n        setCourse(e.target.value)\n        break\n      case \"course_code\":\n        setCourse_code(e.target.value)\n        break\n    }\n  }\n  const onSubmit = e => {\n    console.log(file)\n    console.log({\n      sem,\n      capacity,\n      course_code,\n      course,\n      department\n    })\n    if (file) UploadElectives(file)\n    else\n      UploadElectivesSingle({\n        sem,\n        capacity,\n        course_code,\n        course,\n        department\n      })\n    e.preventDefault()\n    toggle()\n  }\n\n  return (\n    <div>\n      <Button onClick={toggle}>{buttonLabel}</Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>Upload Electives</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={onSubmit}>\n            <FormGroup>\n              <Label for=\"Select Semester\">Select Semester</Label>\n              <Input\n                type=\"select\"\n                name=\"semester\"\n                id=\"Semester Select\"\n                value={sem}\n                onChange={onChange}\n              >\n                <option>1</option>\n                <option>2</option>\n                <option>3</option>\n                <option>4</option>\n                <option>5</option>\n                <option>6</option>\n                <option>7</option>\n                <option>8</option>\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"Select capacity\">Enter Capacity </Label>\n              <Input\n                type=\"number\"\n                min=\"0\"\n                max=\"70\"\n                name=\"Capacity\"\n                value={capacity}\n                onChange={onChange}\n                id=\"Semester Select\"\n              ></Input>\n            </FormGroup>\n\n            <FormGroup>\n              <Label for=\"exampleText\">Elective Course Code</Label>\n              <Input\n                type=\"text\"\n                name=\"course_code\"\n                id=\"exampleText\"\n                value={course_code}\n                onChange={onChange}\n              />\n              <FormText color=\"muted\">Elective course Code.</FormText>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"exampleText\">Elective Course Title</Label>\n              <Input\n                type=\"text\"\n                name=\"course\"\n                id=\"exampleText\"\n                value={course}\n                onChange={onChange}\n              />\n              <FormText color=\"muted\">Elective course Title</FormText>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"electivefile\">File</Label>\n              <CSVReader\n                onFileLoaded={handleReadCSV}\n                inputRef={fileInput}\n                // style={{ display: \"none\" }}\n                onError={handleOnError}\n                configOptions={{ header: true }}\n              />\n              {/* <button onClick={handleImportOffer}>Upload</button> */}\n              {/* <Input ref={fileInput} type=\"file\" name=\"file\" id=\"exampleFile\" /> */}\n              <FormText color=\"muted\">Upload the electives file.</FormText>\n            </FormGroup>\n            <FormGroup tag=\"fieldset\" name=\"Department\">\n              <legend>Select Department</legend>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"radio\"\n                    name=\"option\"\n                    value=\"MECH\"\n                    onClick={onChange}\n                  />\n                  MECH\n                </Label>\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"radio\"\n                    name=\"option\"\n                    value=\"CSE\"\n                    onClick={onChange}\n                  />\n                  CSE\n                </Label>\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"radio\"\n                    name=\"option\"\n                    value=\"CHEM\"\n                    onClick={onChange}\n                  />{\" \"}\n                  CHEM\n                </Label>\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"radio\"\n                    name=\"option\"\n                    value=\"EEE\"\n                    onClick={onChange}\n                  />{\" \"}\n                  EEE\n                </Label>\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"radio\"\n                    name=\"option\"\n                    value=\"ECE\"\n                    onClick={onChange}\n                  />{\" \"}\n                  ECE\n                </Label>\n              </FormGroup>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" type=\"submit\" onClick={onSubmit}>\n            Submit\n          </Button>\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  )\n}\n\nexport default UploadModal\n","import React, { useState } from \"react\"\nimport {\n  Card,\n  Button,\n  CardText,\n  Row,\n  Col,\n  CardHeader,\n  CardBody,\n  Container,\n  InputGroup,\n  InputGroupText,\n  Input\n} from \"reactstrap\"\nimport { Link } from \"react-router-dom\"\nimport UploadModal from \"../Components/Modals\"\nimport Axios from \"axios\"\n\nconst container_style = {\n  margin: \"5%\"\n}\n\nconst allotment = () => {\n  return Axios.post(\"\", {}).then(res => {\n    console.log(res)\n    alert(res.data)\n  })\n}\n\nconst email_report = mail => {\n  console.log(mail)\n  return Axios.get(\"/generatePDF\", { tomail: mail }).then(res => {\n    console.log(res)\n    alert(res.data)\n  })\n}\n\nconst Admin = props => {\n  const [email, setEmail] = useState(null)\n  return (\n    <Container style={container_style}>\n      {\" \"}\n      <Row className=\"justify-content-center\">\n        <Col md=\"4\" sm={{ size: 6, order: 2, offset: 1 }}>\n          <Card>\n            <CardHeader className=\"text-center\" tag=\"h4\">\n              Upload elective lists\n            </CardHeader>\n            <CardBody className=\"text-center\">\n              <CardText>electives list placeholder</CardText>\n              <UploadModal buttonLabel=\"upload electives list \" />\n            </CardBody>\n          </Card>\n        </Col>\n        <Col md=\"4\" sm={{ size: 6, order: 2, offset: 1 }}>\n          <Card>\n            <CardHeader className=\"text-center\" tag=\"h4\">\n              Register Users\n            </CardHeader>\n\n            <CardBody className=\"text-center\">\n              <Link to={\"/register\"}>\n                <Button>Register Students </Button>\n              </Link>\n            </CardBody>\n          </Card>\n          <Card>\n            <CardBody className=\"text-center\">\n              <Button onClick={allotment}>Run Allotment</Button>\n            </CardBody>\n            <CardBody className=\"text-center\">\n              <InputGroup>\n                <InputGroupText>Enter your email. </InputGroupText>\n\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  onChange={e => setEmail(e.target.value)}\n                ></Input>\n              </InputGroup>\n              <Button onClick={() => email_report(email)}>\n                Generate Report\n              </Button>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Admin\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Unauthorized = () => {\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"message\">\n          <h1>403 - You Shall Not Pass</h1>\n          <p>\n            You haven't been authenticated yet !!!\n            <br />\n            Maybe you have a typo in the url? Or you meant to go to a different\n            location? Like...Login?\n          </p>\n        </div>\n        <p>\n          <Link to=\"/\">Back to Home</Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Unauthorized;\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\n\nconst ProtectedRoute = ({ component: Component, user, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (user === \"admin\") return <Component {...rest} {...props} />\n        else\n          return (\n            <Redirect\n              to={{\n                pathname: \"/Unauthorized\",\n                state: { from: props.location }\n              }}\n            />\n          )\n      }}\n    ></Route>\n  )\n}\nexport default ProtectedRoute\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\n\nconst ProtectedRouteStudent = ({ component: Component, studata, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (studata) return <Component {...rest} {...props} studata={studata} />\n        else\n          return (\n            <Redirect\n              to={{\n                pathname: \"/Unauthorized\",\n                state: { from: props.location }\n              }}\n            />\n          )\n      }}\n    ></Route>\n  )\n}\nexport default ProtectedRouteStudent\n","import React from \"react\"\nimport \"./Home.css\"\nimport { Col, Row } from \"reactstrap\"\n\nvar Home = () => {\n  return (\n    <div className=\"home\">\n      <div>\n        <Row className=\"flex-div \">\n          <Col className=\"title flex-div\">\n            <>Elective Management System</>\n          </Col>\n          <Col className=\"instructions\">\n            <h1>Instructions</h1>\n            <p>\n              The View Electives tab will allow you to view all the available\n              electives for the respective semester and department\n            </p>\n            <p>\n              You will be allowed to choose any three electives as your top\n              three preference\n            </p>\n            <p>You will be allowed to change preferences only one more time</p>\n            <p>\n              After a particular deadline, you will not be allowed to change\n              your preference\n            </p>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import React from \"react\"\nimport \"./Home.css\"\n\nvar Logout = () => {\n  return (\n    <div className=\"home\">\n      <table align=\"center\">\n        <tr>\n          <td className=\"title\">\n            <p>Elective Management System</p>\n          </td>\n          <td className=\"instructions\">\n            <h1></h1>\n            <h4>You have been successfully logged out.</h4>\n          </td>\n        </tr>\n      </table>\n    </div>\n  )\n}\n\nexport default Logout\n","import React, { useState, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport {\n  GetElectives,\n  SendChangedElectives\n} from \"../../Functions/AddElectives\"\nimport {\n  Table,\n  FormGroup,\n  Input,\n  Label,\n  Button,\n  PopoverBody,\n  UncontrolledPopover\n} from \"reactstrap\"\n\nconst ChangeElectives = props => {\n  const [pref1, setpref1] = useState(false)\n  const [pref2, setpref2] = useState(false)\n  const [pref3, setpref3] = useState(false)\n  const [electiveList, setElectiveList] = useState(null)\n  const [msg, setmsg] = useState(null)\n  let history = useHistory()\n\n  useEffect(() => {\n    GetElectives(\n      props.studata.rollno.match(/\\D\\D\\D/g)[0].toUpperCase(),\n      props.studata.semester,\n      setElectiveList\n    )\n  }, [props.studata.rollno, props.studata.semester, setElectiveList])\n\n  const transferData = () => {\n    SendChangedElectives(\n      {\n        rollno: props.studata.rollno,\n        elec1: pref1,\n        elec2: pref2,\n        elec3: pref3\n      },\n      setmsg\n    )\n  }\n\n  const valid_data = () => {\n    if (pref1 !== false && pref2 !== false && pref3 !== false) return false\n    else return true\n  }\n\n  const renderTableData = num => {\n    const setpref = e => {\n      if (e.target.name === \"radio1\") {\n        setpref1(e.target.value)\n      } else if (e.target.name === \"radio2\") {\n        setpref2(e.target.value)\n      } else if (e.target.name === \"radio3\") {\n        setpref3(e.target.value)\n      }\n    }\n    return electiveList.map((tuple, index) => {\n      return (\n        <tr>\n          <FormGroup check>\n            <Label check>\n              <td>\n                <Input\n                  type=\"radio\"\n                  name={\"radio\" + num}\n                  value={tuple.course_code}\n                  onClick={setpref}\n                />\n                {tuple.course_code}\n              </td>\n            </Label>\n          </FormGroup>\n\n          <td name={\"course_name\" + num}>{tuple.course_name}</td>\n        </tr>\n      )\n    })\n  }\n  return (\n    <div className=\"selection-table\" style={{ width: \"70%\" }}>\n      <Table\n        striped\n        bordered\n        hover\n        className=\"table-striped table-light\"\n        size=\"sm\"\n      >\n        <thead>\n          <tr>\n            <th>Preference 1</th>\n          </tr>\n          <tr>\n            <th>course_code </th>\n            <th>course </th>\n          </tr>\n        </thead>\n        {electiveList ? (\n          <tbody>{renderTableData(1)}</tbody>\n        ) : (\n          <h1> fetching please wait.....</h1>\n        )}\n      </Table>\n      <Table striped bordered hover className=\"table-striped table-light\">\n        <thead>\n          <tr>\n            <th>Preference 2</th>\n          </tr>\n          <tr>\n            <th>course_code </th>\n            <th>course </th>\n          </tr>\n        </thead>\n        {electiveList ? (\n          <tbody>{renderTableData(2)}</tbody>\n        ) : (\n          <h1> fetching please wait.....</h1>\n        )}\n      </Table>\n      <Table striped bordered hover className=\"table-striped table-light\">\n        <thead>\n          <tr>\n            <th>Preference 3</th>\n          </tr>\n          <tr>\n            <th>course_code </th>\n            <th>course </th>\n          </tr>\n        </thead>\n        {electiveList ? (\n          <tbody>{renderTableData(3)}</tbody>\n        ) : (\n          <h1> fetching please wait.....</h1>\n        )}\n      </Table>\n      <Button onClick={transferData} disabled={valid_data()} id=\"PopoverFocus\">\n        Submit\n      </Button>\n      <UncontrolledPopover\n        trigger=\"focus\"\n        placement=\"bottom\"\n        target=\"PopoverFocus\"\n      >\n        <PopoverBody>{msg}</PopoverBody>\n      </UncontrolledPopover>\n      <Button onClick={() => history.goBack()}> back</Button>\n    </div>\n  )\n}\n\nexport default ChangeElectives\n","import React, { useState, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport {\n  GetElectives,\n  SendSelectedElectives\n} from \"../../Functions/AddElectives\"\nimport {\n  Table,\n  FormGroup,\n  Input,\n  Label,\n  Button,\n  PopoverBody,\n  UncontrolledPopover\n} from \"reactstrap\"\n\nconst ListElectives = props => {\n  const [pref1, setpref1] = useState(false)\n  const [pref2, setpref2] = useState(false)\n  const [pref3, setpref3] = useState(false)\n  const [electiveList, setElectiveList] = useState(null)\n  const [msg, setmsg] = useState(null)\n  let history = useHistory()\n\n  useEffect(() => {\n    GetElectives(\n      props.studata.rollno.match(/\\D\\D\\D/g)[0].toUpperCase(),\n      props.studata.semester,\n      setElectiveList\n    )\n  }, [props.studata.rollno, props.studata.semester, setElectiveList])\n\n  const transferData = () => {\n    SendSelectedElectives(\n      {\n        rollno: props.studata.rollno,\n        elec1: pref1,\n        elec2: pref2,\n        elec3: pref3\n      },\n      setmsg\n    )\n  }\n\n  const valid_data = () => {\n    if (pref1 !== false && pref2 !== false && pref3 !== false) return false\n    else return true\n  }\n\n  const renderTableData = num => {\n    const setpref = e => {\n      if (e.target.name === \"radio1\") {\n        setpref1(e.target.value)\n      } else if (e.target.name === \"radio2\") {\n        setpref2(e.target.value)\n      } else if (e.target.name === \"radio3\") {\n        setpref3(e.target.value)\n      }\n    }\n    return electiveList.map((tuple, index) => {\n      //     const { user_name, user_address, user_id, licence_no, user_permission, user_mobile } = tuple;\n\n      return (\n        <tr>\n          <FormGroup check>\n            <Label check>\n              <td>\n                <Input\n                  type=\"radio\"\n                  name={\"radio\" + num}\n                  value={tuple.course_code}\n                  onClick={setpref}\n                />\n                {tuple.course_code}\n              </td>\n            </Label>\n          </FormGroup>\n\n          <td name={\"course_name\" + num}>{tuple.course_name}</td>\n        </tr>\n      )\n    })\n  }\n  return (\n    <div className=\"selection-table\" style={{ width: \"70%\" }}>\n      <Table\n        striped\n        bordered\n        hover\n        className=\"table-striped table-light\"\n        size=\"sm\"\n      >\n        <thead>\n          <tr>\n            <th>Preference 1</th>\n          </tr>\n          <tr>\n            <th>course_code </th>\n            <th>course </th>\n          </tr>\n        </thead>\n        {electiveList ? (\n          <tbody>{renderTableData(1)}</tbody>\n        ) : (\n          <h1> fetching please wait.....</h1>\n        )}\n      </Table>\n      <Table striped bordered hover className=\"table-striped table-light\">\n        <thead>\n          <tr>\n            <th>Preference 2</th>\n          </tr>\n          <tr>\n            <th>course_code </th>\n            <th>course </th>\n          </tr>\n        </thead>\n        {electiveList ? (\n          <tbody>{renderTableData(2)}</tbody>\n        ) : (\n          <h1> fetching please wait.....</h1>\n        )}\n      </Table>\n      <Table striped bordered hover className=\"table-striped table-light\">\n        <thead>\n          <tr>\n            <th>Preference 3</th>\n          </tr>\n          <tr>\n            <th>course_code </th>\n            <th>course </th>\n          </tr>\n        </thead>\n        {electiveList ? (\n          <tbody>{renderTableData(3)}</tbody>\n        ) : (\n          <h1> fetching please wait.....</h1>\n        )}\n      </Table>\n      <Button onClick={transferData} disabled={valid_data()} id=\"PopoverFocus\">\n        Submit\n      </Button>\n      <UncontrolledPopover\n        trigger=\"focus\"\n        placement=\"bottom\"\n        target=\"PopoverFocus\"\n      >\n        <PopoverBody>{msg}</PopoverBody>\n      </UncontrolledPopover>\n      <Button onClick={() => history.goBack()}> back</Button>\n    </div>\n  )\n}\n\nexport default ListElectives\n","import React, { useState } from \"react\"\nimport \"./App.scss\"\nimport Login from \"./views/Login/login\"\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\n\nimport Navbar from \"./views/Components/Navbar\"\nimport NavbarAdmin from \"./views/Components/NavbarAdmin\"\nimport NavbarStudent from \"./views/Components/NavbarStudent\"\nimport Register from \"./views/Login/Register/Register\"\nimport Student from \"./views/Users/Student\"\nimport Admin from \"./views/Users/Admin\"\nimport Unauthorized from \"./views/Users/Unauthorized\"\nimport ProtectedRoute from \"./views/Components/ProtectedRoutes\"\nimport ProtectedRouteStudent from \"./views/Components/ProtectedRouteStudent\"\nimport Home from \"../src/views/Components/Home\"\nimport Logout from \"./views/Components/Logout\"\nimport ChangeElectives from \"./views/Components/ChangeElectives\"\nimport ListElectives from \"./views/Components/ListElectives\"\n\nfunction App() {\n  const [perm, setPerm] = useState(false)\n  const [studata, setStuData] = useState(null)\n  const [name, setName] = useState(null)\n\n  const handleLogout = () => {\n    localStorage.clear()\n  }\n  const navbar = () => {\n    if (perm === \"admin\") return <NavbarAdmin />\n    else if (perm === \"student\") return <NavbarStudent />\n    else return <Navbar />\n  }\n  return (\n    <BrowserRouter>\n      {navbar()}\n\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          name=\"home page\"\n          render={props => <Home {...props} />}\n        />\n        <Route\n          exact\n          path=\"/logout\"\n          name=\"Lgout page\"\n          render={props => <Logout {...props} />}\n        />\n\n        <ProtectedRouteStudent\n          exact\n          path=\"/student\"\n          name=\" Student Profile Page\"\n          component={Student}\n          studata={studata}\n          handleLogout={handleLogout}\n          user={studata}\n        ></ProtectedRouteStudent>\n\n        {/* <Route\n          path=\"/admin\"\n          name=\"Admin page\"\n          render={props => <Admin {...props} />}\n        /> */}\n        <ProtectedRoute\n          exact\n          path=\"/admin\"\n          name=\" Admin Page\"\n          component={Admin}\n          handleLogout={handleLogout}\n          user={localStorage.getItem(\"uid\")}\n        ></ProtectedRoute>\n        <Route\n          exact\n          path=\"/login\"\n          name=\"Login Page\"\n          setPerm={setPerm}\n          setName={setName}\n          setStuData={setStuData}\n          render={props => (\n            <Login\n              {...props}\n              setPerm={setPerm}\n              setStuData={setStuData}\n              setName={setName}\n            />\n          )}\n        />\n        {/* <Route\n          exact\n          path=\"/register\"\n          name=\" Registeration Page\"\n          render={props => <Register {...props} />}\n        /> */}\n        <ProtectedRoute\n          exact\n          path=\"/register\"\n          name=\" Registeration Page\"\n          component={Register}\n          handleLogout={handleLogout}\n          user={localStorage.getItem(\"uid\")}\n        ></ProtectedRoute>\n\n        <ProtectedRouteStudent\n          exact\n          path=\"/list_electives\"\n          name=\"Elective listing Page\"\n          component={ListElectives}\n          handleLogout={handleLogout}\n          studata={studata}\n        ></ProtectedRouteStudent>\n\n        <ProtectedRouteStudent\n          exact\n          path=\"/change_electives\"\n          name=\"Elective changing Page\"\n          component={ChangeElectives}\n          handleLogout={handleLogout}\n          studata={studata}\n        ></ProtectedRouteStudent>\n        {console.log(localStorage.getItem(\"uid\"))}\n        <Route exact path=\"/Unauthorized\" component={Unauthorized} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/student.d424b860.jpeg\";"],"sourceRoot":""}